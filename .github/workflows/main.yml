name: Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches-ignore: []
  schedule:
    - cron: '0 0 13 * *'


jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5
      matrix:
        python: ['3.8', '3.9', '3.10']
        qt-api: ['pyside6']
      fail-fast: false

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python }}
    - name: Setup ubuntu
      run: |
        sudo apt update -y --fix-missing
        sudo apt install -y build-essential
        sudo apt install -y xvfb libxkbcommon-x11-0 x11-xserver-utils
        # cursor0 and shape0 required as well. Others were provided on pytest-qt and qt page
        sudo apt install libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 libxcb-xfixes0 libxcb-xkb-dev libxcb-cursor0 libxcb-shape0

        sudo apt install graphviz
        sudo apt install libgl1 libgl1-mesa-glx libegl1 libgles2-mesa-dev libgl1-mesa-dev

    - name: Install dependencies
      run: |
        pip install .[testing]
        pip install sequana_fastqc
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --exclude '*/ui/'


    - name: Test with pytest
      env:
        QT_DEBUG_PLUGINS: 1
        DISPLAY: ":99.0"
        QT_API: ${{ matrix.qt-api }}
        T_QPA_PLATFORM: offscreen
      run: |
        Xvfb :99 -screen 0 1024x768x24 > dev>null 2>&1 &
        # gives xvfb some time to start
        sleep 3
        pytest -s --cov-report term-missing --cov=sequanix -v 

    - name: coveralls
      run: |
        pip install coveralls
        coveralls --service=github
      env:
          GITHUB_TOKEN: ${{ github.token }}
